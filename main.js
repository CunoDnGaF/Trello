!function(){"use strict";class t{constructor(){this.storage=localStorage}save(t){this.storage.setItem("data",JSON.stringify(t))}load(){try{return JSON.parse(this.storage.getItem("data"))}catch(t){throw new Error("Invalid data")}}statusChange(t,e){const a=this.load();for(const o in a)o===t&&(a[o].status=e);this.save(a)}remove(){let t=this.load();t={},this.save(t)}}new class{constructor(e){this.addLink=e.querySelectorAll(".add-link"),this.column=e.querySelectorAll(".column"),this.columnTodo=e.querySelector(".todo"),this.columnInProgress=e.querySelector(".in-progress"),this.storageButtonSave=e.querySelector(".save"),this.storageButtonReset=e.querySelector(".reset"),this.columnDone=e.querySelector(".done"),this.storage=new t,this.data={},this.loadData=this.storage.load()}static get enteringMarkup(){return'\n        <div class="new-card">\n        <textarea id="card-content" name="card-content" class="card-content" placeholder="Enter a title for this card..."></textarea>\n        <input type="button" id="card-button" name="card-button" class="card-button" value="Add card">\n        <input type="button" id="close-button" name="close-button" class="close-button" value="X">\n        </div>'}pageLoading(){null===this.loadData||void 0===this.loadData.toDo||this.loadStorage(this.loadData),this.start()}start(){this.addCard(),this.cardClose(),this.cardDrag(),this.storageButtonsActivator()}addCard(){this.addLink.forEach((t=>{t.addEventListener("click",(()=>{let e=this.constructor.enteringMarkup;t.insertAdjacentHTML("beforebegin",e),t.classList.add("unactive");let a=t.previousSibling,o=a.querySelector(".card-button"),s=a.querySelector(".close-button");o.addEventListener("click",(()=>{let e=a.querySelector(".card-content");t.insertAdjacentHTML("beforebegin",`\n              <div class="card">\n              <input type="button" id="card-close-button" name="card-close-button" class="card-close-button unactive" value="X">\n              <p>${e.value}</p>\n              </div>`),t.classList.remove("unactive"),a.remove()})),s.addEventListener("click",(()=>{t.classList.remove("unactive"),a.remove()}))}))}))}cardClose(){let t=function(t){if(t.target.classList.contains("card")){let e=t.target.querySelector(".card-close-button");t.target.addEventListener("mouseenter",(()=>{e.classList.remove("unactive")})),t.target.addEventListener("mouseleave",(()=>{e.classList.add("unactive")})),e.addEventListener("click",(()=>{t.target.remove()}))}};this.column.forEach((e=>e.addEventListener("mouseover",t)))}cardDrag(){this.column.forEach((t=>{let e;const a=t=>{if(e.classList.contains("card")){const s=t.target;s.classList.contains("card")&&s.after(e),s.classList.contains("column-title")&&s.after(e),s.classList.contains("add-link")&&s.before(e),e.classList.remove("dragged"),e=void 0,document.documentElement.removeEventListener("mouseup",a),document.documentElement.removeEventListener("mouseover",o)}},o=t=>{e.style.top=t.clientY+"px",e.style.left=t.clientX+"px"};t.addEventListener("mousedown",(t=>{e=t.target,e.classList.contains("card")&&(e.classList.add("dragged"),t.preventDefault()),document.documentElement.addEventListener("mouseup",a),document.documentElement.addEventListener("mouseover",o)}))}))}storageButtonsActivator(){this.storageButtonReset.addEventListener("click",(()=>{Array.from(document.querySelectorAll(".card")).forEach((t=>{t.remove()})),this.storage.remove()})),this.storageButtonSave.addEventListener("click",(()=>{const t=Array.from(document.querySelector(".todo").querySelectorAll(".card")),e=Array.from(document.querySelector(".in-progress").querySelectorAll(".card")),a=Array.from(document.querySelector(".done").querySelectorAll(".card"));this.data.toDo=[],this.data.inProgress=[],this.data.done=[],t.forEach((t=>{this.data.toDo.push(t.textContent)})),e.forEach((t=>{this.data.inProgress.push(t.textContent)})),a.forEach((t=>{this.data.done.push(t.textContent)})),this.storage.save(this.data)}))}loadStorage(t){let e=function(t,e){const a=document.createElement("div"),o=document.createElement("p"),s=document.createElement("input");a.classList.add("card"),s.classList.add("card-close-button"),s.classList.add("unactive"),s.type="button",s.value="X",o.textContent=e,t.querySelector(".add-link").parentNode.insertBefore(a,t.querySelector(".add-link")),a.prepend(o),a.prepend(s)};t.toDo.forEach((t=>{e(this.columnTodo,t)})),t.inProgress.forEach((t=>{e(this.columnInProgress,t)})),t.done.forEach((t=>{e(this.columnDone,t)}))}}(document).pageLoading()}();